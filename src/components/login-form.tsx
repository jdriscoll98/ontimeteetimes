/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/5OSlOzvPi8G
 */
import { Button } from "@/components/ui/button";
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Checkbox } from "@/components/ui/checkbox";
import { Input } from "@/components/ui/input";

import { Label } from "@/components/ui/label";
import { SetStateAction, useState } from "react";
import NeoButton from "./ui/neo-button";
import NeoInput from "./ui/neo-input";
import { LoaderIcon } from "lucide-react";

export function LoginForm() {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState<string>("");
  const [loading, setLoading] = useState<boolean>(false);

  const onSubmit = async ({
    email,
    password,
  }: {
    email: string;
    password: string;
  }) => {
    setError("");

    if (!email) {
      setError("Email is required");
      return;
    }

    if (!password) {
      setError("Password is required");
      return;
    }
    try {
      setLoading(true);
      const res = await fetch("/api/login", {
        method: "POST",
        body: JSON.stringify({ email, password }),
      });
      const data = (await res.json()) as { success: boolean };
      if (!data.success) {
        setError("Login failed");
      } else {
        window.localStorage.setItem("email", email);
        window.location.reload();
      }
    } catch (e) {
      setError("Login failed");
    } finally {
      setLoading(false);
    }
    const res = await fetch("/api/login", {
      method: "POST",
      body: JSON.stringify({ email, password }),
    });
    const data = (await res.json()) as { success: boolean };
    if (!data.success) {
      setError("Login failed");
    } else {
      window.localStorage.setItem("email", email);
      window.location.reload();
    }
  };
  return (
    <div className="flex flex-col gap-4 p-4">
      <h1 className="text-2xl font-semibold">Login</h1>
      <span>Enter the same login you use for Jax Beach</span>
      {error && <div className="text-red-500">{error}</div>}
      <NeoInput
        required
        type='email'
        value={email}
        setValue={setEmail}
        placeholder={"Email"}
      />
      <NeoInput
        required
        type="password"
        value={password}
        setValue={setPassword}
        placeholder={"Password"}
      />
      <NeoButton onClick={() => onSubmit({ email, password })}>
        {loading ? <LoaderIcon /> : "Submit"}
      </NeoButton>
    </div>
  );
}
