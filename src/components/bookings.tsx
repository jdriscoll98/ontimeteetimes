/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/AXXN2EMtSrs
 */
import {
  NeoTable,
  NeoTableBody,
  NeoTableCell,
  NeoTableHead,
  NeoTableHeader,
  NeoTableRow,
} from "@/components/ui/neo-table";
import { useEffect, useState } from "react";
import NeoButton from "./ui/neo-button";
import { XCircle } from "lucide-react";

export function Bookings() {
  const { bookings, cancelBooking } = useBookings();
  return (
    <main className="flex flex-col  p-4">
      <h1 className="text-2xl font-bold ">Current Bookings</h1>
      <div className="w-full mt-6">
        <div className="border rounded-lg w-full">
          <div className="relative w-full overflow-auto">
            <NeoTable>
              <NeoTableHeader>
                <NeoTableRow>
                  <NeoTableHead>Date</NeoTableHead>
                  <NeoTableHead>Time</NeoTableHead>
                  <NeoTableHead>Players</NeoTableHead>
                  <NeoTableHead>Cancel</NeoTableHead>
                </NeoTableRow>
              </NeoTableHeader>
              <NeoTableBody>
                {!!bookings?.length &&
                  bookings?.map((booking: any) => (
                    <NeoTableRow key={booking.date_booked}>
                      <NeoTableCell className="font-medium">
                        {new Date(booking.time).toLocaleDateString("en-US", {
                          weekday: "short",
                          month: "short",
                          day: "numeric",
                        })}
                      </NeoTableCell>
                      <NeoTableCell>
                        {new Date(booking.time).toLocaleTimeString("en-US", {
                          hour: "numeric",
                          minute: "numeric",
                        })}
                      </NeoTableCell>
                      <NeoTableCell>{booking.carts}</NeoTableCell>
                      <NeoTableCell>
                        <NeoButton className='p-2' onClick={() => cancelBooking(booking)}>
                          <XCircle />
                        </NeoButton>
                      </NeoTableCell>
                    </NeoTableRow>
                  ))}
                {bookings?.length === 0 && (
                  <NeoTableRow>
                    <NeoTableCell colSpan={4} className="text-center">
                      No bookings found
                    </NeoTableCell>
                  </NeoTableRow>
                )}
                {typeof bookings === "undefined" && (
                  <NeoTableRow>
                    <NeoTableCell colSpan={4} className="text-center">
                      Loading...
                    </NeoTableCell>
                  </NeoTableRow>
                )}
              </NeoTableBody>
            </NeoTable>
          </div>
        </div>
      </div>
    </main>
  );
}

function useBookings() {
  const [bookings, setBookings] = useState<any[] | undefined>(undefined);

  useEffect(() => {
    if (!window.localStorage.getItem("email")) return;
    const formData = new FormData();
    formData.append("email", window.localStorage.getItem("email") || "");
    fetch("/api/bookings", {
      method: "POST",
      body: formData,
    }).then(async (res) => {
      const { bookings } = await res.json();
      setBookings(bookings);
    });
  }, []);

  const cancelBooking = (booking: any) => {
    if (
      window.confirm("Are you sure you want to cancel this booking?") === false
    )
      return;
    const formData = new FormData();
    formData.append("email", window.localStorage.getItem("email") || "");
    formData.append("id", booking.TTID);
    fetch("/api/bookings", {
      method: "DELETE",
      body: formData,
    }).then(async (res) => {
      const json = await res.json();
      if (json.success) {
        alert("Booking cancelled");
        setBookings(bookings?.filter((b: any) => b.TTID !== booking.TTID));
      }
    });
  };

  return {
    bookings,
    cancelBooking,
  };
}
